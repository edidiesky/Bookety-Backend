
networks:
  app-tier:
    driver: bridge
services:
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    networks:
      - app-tier
    ports:
      - "5672:5672" 
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s 
    deploy:  # Resource limits to prevent memory issues
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  redis:
    image: redis:7.0-alpine
    container_name: redis
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-tier
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    env_file:
      - ./auth/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-tier
    ports:
      - "4000:4000"
    # volumes:
      # - ./auth
    healthcheck:
      test: ["CMD", "curl", "-f", "http://auth:4001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  
  # PROMETHEUS 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    networks:
      - app-tier
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-tier
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
          
volumes:
  redis-data:
  rabbitmq_data:
  prom_data:
  grafana_data:
